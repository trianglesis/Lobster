# Generated by Django 2.2.1 on 2019-05-30 08:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_key', models.CharField(max_length=120, unique=True, verbose_name='option key unique')),
                ('option_value', models.TextField(blank=True, null=True, verbose_name='option value')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('private', models.NullBooleanField(verbose_name='private value')),
            ],
            options={
                'db_table': 'octo_options',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserNamesCorrespond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('django_username', models.CharField(max_length=150, unique=True)),
                ('adprod_username', models.CharField(max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'octo_adprod_usernames',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserAdprod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adprod_username', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('test_run', 'User can run tests'), ('service_run', 'User can run service tasks eg tideway restart'), ('routine_run', 'User can run routines'), ('task_revoke', 'User can revoke task'), ('task_manage', 'User can manage celery tasks, every action'), ('superuser', 'User can execute everything')),
            },
        ),
        migrations.CreateModel(
            name='ServiceLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_key', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('log_args', models.TextField(blank=True, null=True)),
                ('log_kwargs', models.TextField(blank=True, null=True)),
                ('addm_name', models.TextField(blank=True, max_length=255, null=True)),
                ('addm_host', models.TextField(blank=True, max_length=255, null=True)),
                ('log_out', models.TextField(blank=True, null=True)),
                ('log_err', models.TextField(blank=True, null=True)),
                ('log_input', models.TextField(blank=True, null=True)),
                ('log_outputs_raw', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'SERVICE_LOG',
                'managed': True,
                'unique_together': {('log_key', 'created_at')},
            },
        ),
        migrations.CreateModel(
            name='RoutineExecutionLog',
            fields=[
                ('routine_key', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('routine_name', models.CharField(max_length=255)),
                ('routine_time_spent', models.CharField(blank=True, max_length=255, null=True)),
                ('routine_args', models.CharField(blank=True, max_length=255, null=True)),
                ('routine_kwargs', models.CharField(blank=True, max_length=255, null=True)),
                ('routine_desc_details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ROUTINES_LOG',
                'managed': True,
                'unique_together': {('routine_key', 'created_at')},
            },
        ),
        migrations.CreateModel(
            name='AddmDev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addm_host', models.CharField(max_length=255, unique=True)),
                ('addm_name', models.CharField(max_length=255)),
                ('tideway_user', models.CharField(max_length=255)),
                ('tideway_pdw', models.CharField(max_length=255)),
                ('root_user', models.CharField(max_length=255)),
                ('root_pwd', models.CharField(max_length=255)),
                ('addm_ip', models.CharField(max_length=255, unique=True)),
                ('addm_v_code', models.CharField(max_length=255)),
                ('addm_v_int', models.CharField(max_length=255)),
                ('addm_full_version', models.CharField(blank=True, max_length=255, null=True)),
                ('addm_branch', models.CharField(max_length=255)),
                ('addm_owner', models.CharField(max_length=255)),
                ('addm_group', models.CharField(max_length=255)),
                ('disables', models.NullBooleanField()),
            ],
            options={
                'db_table': 'octo_addm_dev',
                'managed': True,
                'unique_together': {('addm_host', 'addm_name', 'addm_v_int', 'addm_group')},
            },
        ),
    ]
